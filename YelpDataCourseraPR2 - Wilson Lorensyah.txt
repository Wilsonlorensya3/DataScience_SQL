Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

By Wilson Lorensyah

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and 
understand the data just like a data scientist would. For this first part of the assignment, 
you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer.
You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data 
for a particular research question you want to answer. You will be required to prepare the dataset for the analysis
you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, 
so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, 
and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that 
your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, 
Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page 
layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.

Database looks like: https://d3c33hcgiwev3.cloudfront.net/imageAssetProxy.v1/hOlYbrgyEeeTsRKxhJ5OZg_517578844a2fd129650492eda3186cd1_YelpERDiagram.png?expiry=1617926400000&hmac=fv-tdxQMZnn5S_kWfc1B9V8xE-hSV--tBuvY4bTwN24

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000 by id, and 8090 by business_id
vi. Checkin = 493
vii. Photo = 6493 by business_id, 10000 by id
viii. Tip = 3979 by business_id
ix. User = 10000
x. Friend = 11 by user_id
xi. Elite_years = 2780 by user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

Sample code for i. Business above:
select id, count(*)
from business
group by id
order by id desc

Sample code for ii. Hours above:
select business_id, count(*)
from hours
group by business_id
order by business_id desc

Sample code for xi. Elite_years above:
select user_id, count(*)
from elite_years
group by user_id
order by user_id desc

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	select * 
	from user
	where coalesce(name,review_count,yelping_since,useful,funny,cool,fans,average_stars,compliment_hot,compliment_more,compliment_profile,compliment_cute,compliment_list,compliment_note,compliment_plain,compliment_cool,compliment_funny,compliment_writer,compliment_photos) is null
	
coalesce for: https://stackoverflow.com/questions/780337/sql-query-to-check-if-40-columns-in-table-is-null 
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max:5		avg:3.7082
		
Code: 
select stars, avg(stars) as avg_stars, max(stars) as max_stars, min(stars) as min_stars
from review
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995
Code:
select avg(review_count) as avgg, max(review_count) as maxx, min(review_count) as minn
from user	


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	select city, review_count
	from business
	group by city
	order by review_count desc

SELECT sum(b.review_count) AS bus_count,  b.city
		FROM business As b
		group by b.city
		order by bus_count desc
	
	Copy and Paste the Result Below:
	
+------------------------+--------------+
| city                   | review_count |
+------------------------+--------------+
| Woodmere Village       |          242 |
| Mount Lebanon          |          138 |
| Charlotte              |          120 |
| McMurray               |          112 |
| North York             |          109 |
| Enterprise             |           89 |
| Matthews               |           77 |
| Munroe Falls           |           74 |
| Ahwatukee              |           69 |
| Pittsburgh             |           68 |
| Woodmere               |           68 |
| Tolleson               |           65 |
| Pineville              |           63 |
| Carnegie               |           61 |
| Macedonia              |           58 |
| Markham                |           54 |
| Whitchurch-Stouffville |           52 |
| Windsor                |           50 |
| Goodyear               |           49 |
| Gibsonia               |           45 |
| Summerlin              |           44 |
| Peninsula              |           42 |
| Richfield              |           42 |
| Dormont                |           40 |
| nboulder city          |           40 |
+------------------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)

			+-----------+-----------------+
			| bus_count | city            |
			+-----------+-----------------+
			|     82854 | Las Vegas       |
			|     34503 | Phoenix         |
			|     24113 | Toronto         |
			|     20614 | Scottsdale      |
			|     12523 | Charlotte       |
			|     10871 | Henderson       |
			|     10504 | Tempe           |
			|      9798 | Pittsburgh      |
			|      9448 | MontrÃ©al       |
			|      8112 | Chandler        |
			|      6875 | Mesa            |
			|      6380 | Gilbert         |
			|      5593 | Cleveland       |
			|      5265 | Madison         |
			|      4406 | Glendale        |
			|      3814 | Mississauga     |
			|      2792 | Edinburgh       |
			|      2624 | Peoria          |
			|      2438 | North Las Vegas |
			|      2352 | Markham         |
			|      2029 | Champaign       |
			|      1849 | Stuttgart       |
			|      1520 | Surprise        |
			|      1465 | Lakewood        |
			|      1155 | Goodyear        |
			+-----------+-----------------+
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars, count(*)
from business
where city = 'Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+----------+
| stars | count(*) |
+-------+----------+
|   1.5 |        1 |
|   2.5 |        2 |
|   3.5 |        3 |
|   4.0 |        2 |
|   4.5 |        1 |
|   5.0 |        1 |
+-------+----------+

ii. Beachwood

SQL code used to arrive at answer:
select stars, count(*) as total
from business
where city = 'Beachwood'
group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+----------+
| stars | total	   |
+-------+----------+
|   2.0 |        1 |
|   2.5 |        1 |
|   3.0 |        2 |
|   3.5 |        2 |
|   4.0 |        1 |
|   4.5 |        2 |
|   5.0 |        5 |
+-------+----------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	select name, review_count
	from business
	order by review_count desc

	select name, review_count
	from user
	order by review_count desc
		
	Copy and Paste the Result Below:
	The Buffet - 3873 reviews, Schwart'z 1757 reviews, Joe's Farm Grill 1549 reviews

	Gerald - 2000 reviews, Sara 1629 reviews, Yuri 1339 reviews


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	no, seems like the highest review_count did not have the highest fans, and vice versa.
	In general, more fans will be more correlated whether or not if it's receiving positive review instead of just the review count.

	I think this can also be tackled using the pearson's correlation formula to see if there's any correlation
	between them. https://www.red-gate.com/simple-talk/blogs/statistics-sql-pearsons-correlation/
	
Code used: 
select name, review_count, fans
from user
order by review_count desc

select name, review_count, fans
from user
order by fans desc
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	Using the code for finding "hate", it will return 232 entry.
	Using the code for finding "love", it will return 1780 entry.
	Thus more reviews with word "love". Note that the word 'hate' could be included in 'wHATEver' which could be inaccurate sometimes. 

	SQL code used to arrive at answer:
	select text
	from review
	where text like '%hate%'
	
	select text
	from review
	where text like '%love%'
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	select name, fans
	from user
	order by fans desc
	limit 10
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their 
overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. 
Include your code.


This code above won't give accurate opening hours of the business, to look the hours - see the code below

Chosen City: 'Toronto', Chosen category: 'Food'.

i. Do the two groups you chose to analyze have a different distribution of hours?
Based on Code 3b below, 
In this case, group 1 consists for Loblaws that has between 2-3 stars, and group 2 consists of 
Halo Brewery and Cabin Fever that has between 4-5 stars. In this result, it can be seen that business with lower
stars open longer - pretty much the whole day (14 hours per day for 7 days). 
However, group 2 runs pretty much half day (6-8 hours per day for 6-7 days).

ii. Do the two groups you chose to analyze have a different number of reviews?
Based on the result for Code 1, opening hours seems to be a bit vary - since they are in different category. 
Based on the result for Code 2, most restaurant open on Saturdays - mostly open during breakfast time, and finish
during lunchtime, some of them open longer hours until around dinner/supper time.
Based on this result Code 3b, yes, higher stars seems to have positive correlation with the number of review_count.         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
From the database itself, it will need the business_id combined altogether from the category table and hours 
table with the business table. Then, the chosen category for this question seems to give lack representation of the whole city.
There was only 1 restaurant rated 2-3 stars with the category food and 2 restaurants rated 4-5 stars in Toronto.
However, reality might say that there were a lot of restaurant that has not been covered within the database
that could have been included in the data analysis to get better representation of the food category in Toronto. 

SQL code used for analysis:
Code 1: For considering chosen city 'Toronto'

select b.name,b.city, h.hours, b.stars, c.category, b.review_count
from ((business b inner join hours h on b.id = h.business_id)
inner join category c on b.id = c.business_id)
where b.city = 'Toronto' 
group by b.stars
order by stars

+-----------------------+---------+----------------------+-------+-----------------------+--------------+
| name                  | city    | hours                | stars | category              | review_count |
+-----------------------+---------+----------------------+-------+-----------------------+--------------+
| 99 Cent Sushi         | Toronto | Saturday|11:00-23:00 |   2.0 | Restaurants           |            5 |
| The Fox & Fiddle      | Toronto | Saturday|10:00-2:00  |   2.5 | Bars                  |           35 |
| The Gym at 99 Sudbury | Toronto | Saturday|8:00-20:00  |   3.0 | Yoga                  |           14 |
| The Charlotte Room    | Toronto | Saturday|18:00-2:00  |   3.5 | Venues & Event Spaces |           10 |
| Edulis                | Toronto | Saturday|18:00-23:00 |   4.0 | Restaurants           |           89 |
| Good Gosh Beauty      | Toronto | Monday|11:30-18:00   |   4.5 | Beauty & Spas         |            6 |
| Innercity MMA         | Toronto | Monday|17:00-22:00   |   5.0 | Active Life           |            3 |
+-----------------------+---------+----------------------+-------+-----------------------+--------------+

Code 2:For considering chosen category 'Food'

select b.name,b.city, h.hours, b.stars, c.category, b.review_count
from ((business b inner join hours h on b.id = h.business_id)
inner join category c on b.id = c.business_id)
where c.category ='Food'
group by b.stars
order by stars

+---------------------------------------+------------+----------------------+-------+----------+--------------+
| name                                  | city       | hours                | stars | category | review_count |
+---------------------------------------+------------+----------------------+-------+----------+--------------+
| Walgreens                             | Las Vegas  | Saturday|8:00-22:00  |   2.5 | Food     |            6 |
| What A Bagel                          | York       | Saturday|6:00-15:30  |   3.0 | Food     |            8 |
| Baby Cakes                            | Willoughby | Saturday|10:00-17:00 |   3.5 | Food     |            5 |
| C's Restaurant Bakery and Coffee Shop | Middleton  | Saturday|6:00-14:00  |   4.0 | Food     |           37 |
| Cabin Fever                           | Toronto    | Saturday|16:00-2:00  |   4.5 | Food     |           26 |
| Red Apron Bakeshop                    | Chandler   | Saturday|9:00-17:00  |   5.0 | Food     |            5 |
+---------------------------------------+------------+----------------------+-------+----------+--------------+

Code 3a: For considering both chosen city is 'Toronto' and category 'Food'

select b.name,b.city, h.hours, b.stars, c.category, b.review_count
from ((business b inner join hours h on b.id = h.business_id)
inner join category c on b.id = c.business_id)
where b.city = 'Toronto' and c.category ='Food'
group by b.stars
order by stars

+--------------+---------+----------------------+-------+----------+--------------+
| name         | city    | hours                | stars | category | review_count |
+--------------+---------+----------------------+-------+----------+--------------+
| Loblaws      | Toronto | Saturday|8:00-22:00  |   2.5 | Food     |           10 |
| Halo Brewery | Toronto | Saturday|11:00-21:00 |   4.0 | Food     |           15 |
| Cabin Fever  | Toronto | Saturday|16:00-2:00  |   4.5 | Food     |           26 |
+--------------+---------+----------------------+-------+----------+--------------+

Code 3b: For considering both chosen 'city' and chosen 'category'

select b.name,b.city, h.hours, b.stars, c.category, b.review_count
from ((business b inner join hours h on b.id = h.business_id)
inner join category c on b.id = c.business_id)
where b.city = 'Toronto' and c.category ='Food'
order by stars

+--------------+---------+-----------------------+-------+----------+--------------+
| name         | city    | hours                 | stars | category | review_count |
+--------------+---------+-----------------------+-------+----------+--------------+
| Loblaws      | Toronto | Monday|8:00-22:00     |   2.5 | Food     |           10 |
| Loblaws      | Toronto | Tuesday|8:00-22:00    |   2.5 | Food     |           10 |
| Loblaws      | Toronto | Friday|8:00-22:00     |   2.5 | Food     |           10 |
| Loblaws      | Toronto | Wednesday|8:00-22:00  |   2.5 | Food     |           10 |
| Loblaws      | Toronto | Thursday|8:00-22:00   |   2.5 | Food     |           10 |
| Loblaws      | Toronto | Sunday|8:00-22:00     |   2.5 | Food     |           10 |
| Loblaws      | Toronto | Saturday|8:00-22:00   |   2.5 | Food     |           10 |
| Halo Brewery | Toronto | Tuesday|15:00-21:00   |   4.0 | Food     |           15 |
| Halo Brewery | Toronto | Friday|15:00-21:00    |   4.0 | Food     |           15 |
| Halo Brewery | Toronto | Wednesday|15:00-21:00 |   4.0 | Food     |           15 |
| Halo Brewery | Toronto | Thursday|15:00-21:00  |   4.0 | Food     |           15 |
| Halo Brewery | Toronto | Sunday|11:00-21:00    |   4.0 | Food     |           15 |
| Halo Brewery | Toronto | Saturday|11:00-21:00  |   4.0 | Food     |           15 |
| Cabin Fever  | Toronto | Monday|16:00-2:00     |   4.5 | Food     |           26 |
| Cabin Fever  | Toronto | Tuesday|18:00-2:00    |   4.5 | Food     |           26 |
| Cabin Fever  | Toronto | Friday|18:00-2:00     |   4.5 | Food     |           26 |
| Cabin Fever  | Toronto | Wednesday|18:00-2:00  |   4.5 | Food     |           26 |
| Cabin Fever  | Toronto | Thursday|18:00-2:00   |   4.5 | Food     |           26 |
| Cabin Fever  | Toronto | Sunday|16:00-2:00     |   4.5 | Food     |           26 |
| Cabin Fever  | Toronto | Saturday|16:00-2:00   |   4.5 | Food     |           26 |
+--------------+---------+-----------------------+-------+----------+--------------+
		
		
2. Group business based on the ones that are open and the ones that are closed. 
What differences can you find between the ones that are still open and the ones that are closed? 
List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
There are more reviews that contain the letter 'closed' to business that are open than closed business 
Its average review count for opened business is higher

Average review count for opened business: 31.75
Average review count for closed business: 23.19   
         
ii. Difference 2:
There is higher average star rating for opened business than closed business
Average stars for opened business: 3.67
Average stars for closed business: 3.52
         
                 
SQL code used for analysis:

select is_open,COUNT(DISTINCT(id)),AVG(review_count),SUM(review_count),AVG(stars)
from business
group by is_open


+---------+---------------------+-------------------+-------------------+---------------+
| is_open | COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) |
+---------+---------------------+-------------------+-------------------+---------------+
|       0 |                1520 |     23.1980263158 |             35261 | 3.52039473684 |
|       1 |                8480 |     31.7570754717 |            269300 | 3.67900943396 |
+---------+---------------------+-------------------+-------------------+---------------+

select b.name, b.is_open, r.text
from business b inner join review r on b.id = r.business_id
where r.text like '%closed%'
order by b.is_open


select is_open, count(*) as total
from business
group by is_open


select *
from ((business b inner join hours h on b.id=h.business_id)
inner join checkin c on b.id=c.business_id)
group by b.is_open

select c.count, b.name
from (business b inner join checkin c on b.id=c.business_id)
group by b.is_open

select name, city,state,is_open
from business b
order by is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct 
on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, 
clustering businesses to find commonalities or anomalies between them, 
predicting the overall star rating for a business, predicting the number of fans a user will have, and so on.
These are just a few examples to get you started, 
so feel free to be creative and come up with your own problem you want to solve. 
Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   classification problem about geographic location!    
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    given the business latitude, and longitude, need to classify correct city. By having enough samples on different 
    latitude and longitude on different places of the business -then one would be able to predict given latitude and
    longitude, it can says which one would be closest to the city chosen.                     
                  
iii. Output of your finished dataset:
+--------------+----------+-----------+
| city         | latitude | longitude |
+--------------+----------+-----------+
| Aberdour     |  56.0553 |  -3.29798 |
| Ahwahtukee   |  33.3427 |  -111.984 |
| Ahwatukee    |  33.3181 |  -111.984 |
| Ajax         |  43.8623 |  -79.0207 |
| Allison Park |  40.5921 |  -79.9475 |
| Ambridge     |  40.6049 |  -80.2261 |
| Amherst      |  41.4126 |  -82.2093 |
| Anjou        |  45.6005 |  -73.5686 |
| Anthem       |  33.8702 |  -112.151 |
| Aspinwall    |  40.4883 |  -79.8979 |
| Aurora       |  44.0074 |  -79.4445 |
| Avon         |   41.457 |  -82.0111 |
| Avon Lake    |   41.486 |  -82.0476 |
| Avondale     |  33.4495 |   -112.35 |
| Bay Village  |  41.4883 |  -81.9426 |
| Beachwood    |  41.4627 |  -81.4829 |
| Bedford      |  41.3922 |  -81.5359 |
| Beeton       |  44.0791 |  -79.7849 |
| Belleville   |  42.9293 |  -89.5242 |
| Belmont      |  35.2631 |  -81.0267 |
| Berea        |  41.3677 |  -81.8399 |
| Berry        |  43.1939 |   -89.628 |
| Bethel Park  |  40.3341 |  -80.0241 |
| Black Earth  |  43.1381 |  -89.7481 |
| Blainville   |  45.6628 |  -73.8634 |
+--------------+----------+-----------+
(Output limit exceeded, 25 of 362 total rows shown)
         
iv. Provide the SQL code you used to create your final dataset:

select b.city, b.latitude, b.longitude
from business b 
group by city


Link about the database : https://www.coursera.org/learn/sql-for-data-science/supplement/VSJ29/yelp-dataset-sql-lookup